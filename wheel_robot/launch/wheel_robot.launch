<launch>
  <!-- roslaunch arguments -->
  <arg name="paused" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="show_rviz" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of 
    the world to be launched "worlds/empty.world"-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find wheel_robot)/worlds/wheel_robot.world" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="true" />
    <arg name="headless" value="false" />
  </include>
 
  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro.py $(find robot_pkg)/urdf/wheel_robot_base.urdf.xacro" />
 
  <!-- Setting gui parameter to true for display joint slider -->
  <param name="use_gui" value="true"/>
  <!-- Starting Joint state publisher node which will publish the joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <!-- Starting robot state publish which will publish tf -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <!-- Launch visualization in rviz -->

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="wheel_robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
    args="-urdf -param robot_description -model wheel_robot" />

<!-- robot visualization in Rviz -->

  <group if="$(arg show_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find wheel_robot)/launch/wheel_robot.rviz"/> 
  </group>

</launch>